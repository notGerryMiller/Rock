//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using System;
using System.Linq;

using Rock.ViewModels.Utility;

namespace Rock.ViewModels.Entities
{
    /// <summary>
    /// NotificationMessageType View Model
    /// </summary>
    public partial class NotificationMessageTypeBag : EntityBagBase
    {
        /// <summary>
        /// Gets or sets the component data json. This data is only understood
        /// by the component itself and should not be modified elsewhere.
        /// </summary>
        /// <value>
        /// The component data json.
        /// </value>
        public string ComponentDataJson { get; set; }

        /// <summary>
        /// Gets or sets the Id of the Rock.Model.EntityType component
        /// that handles logic for this instance.
        /// </summary>
        /// <value>
        /// A System.Int32 representing the Id of the Rock.Model.EntityType.
        /// </value>
        public int EntityTypeId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether messages are deleted instead
        /// of being marked as read.
        /// </summary>
        /// <value>
        /// true if this messages are deleted instead of being marked as read; otherwise, false.
        /// </value>
        public bool IsDeletedOnRead { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether messages are supported
        /// on mobile applications.
        /// </summary>
        /// <value>
        /// true if messages are supported on mobile; otherwise, false.
        /// </value>
        public bool IsMobileApplicationSupported { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether messages are supported
        /// on TV applications.
        /// </summary>
        /// <value>
        /// true if messages are supported on TV; otherwise, false.
        /// </value>
        public bool IsTvApplicationSupported { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether messages are supported
        /// on web sites.
        /// </summary>
        /// <value>
        /// true if this messages are supported on web; otherwise, false.
        /// </value>
        public bool IsWebSupported { get; set; }

        /// <summary>
        /// Gets or sets the key that identifies this instance to the component.
        /// </summary>
        /// <value>
        /// A System.String that identifies this instance.
        /// </value>
        public string Key { get; set; }

        /// <summary>
        /// Gets or sets the related mobile site identifier. If specified then
        /// messages will only show up on this mobile application. Otherwise
        /// messages will show up on all mobile applications. This does not
        /// affect other site types.
        /// </summary>
        /// <value>
        /// The related mobile site identifier.
        /// </value>
        public int? RelatedMobileApplicationSiteId { get; set; }

        /// <summary>
        /// Gets or sets the related TV site identifier. If specified then
        /// messages will only show up on this TV application. Otherwise
        /// messages will show up on all TV applications. This does not
        /// affect other site types.
        /// </summary>
        /// <value>
        /// The related TV site identifier.
        /// </value>
        public int? RelatedTvApplicationSiteId { get; set; }

        /// <summary>
        /// Gets or sets the related web site identifier. If specified then
        /// messages will only show up on this website. Otherwise messages
        /// will show up on all websites. This does not affect other site types.
        /// </summary>
        /// <value>
        /// The related web site identifier.
        /// </value>
        public int? RelatedWebSiteId { get; set; }

        /// <summary>
        /// Gets or sets the created date time.
        /// </summary>
        /// <value>
        /// The created date time.
        /// </value>
        public DateTime? CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the modified date time.
        /// </summary>
        /// <value>
        /// The modified date time.
        /// </value>
        public DateTime? ModifiedDateTime { get; set; }

        /// <summary>
        /// Gets or sets the created by person alias identifier.
        /// </summary>
        /// <value>
        /// The created by person alias identifier.
        /// </value>
        public int? CreatedByPersonAliasId { get; set; }

        /// <summary>
        /// Gets or sets the modified by person alias identifier.
        /// </summary>
        /// <value>
        /// The modified by person alias identifier.
        /// </value>
        public int? ModifiedByPersonAliasId { get; set; }

    }
}
