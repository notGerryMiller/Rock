//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { PublicAttributeBag } from "@Obsidian/ViewModels/Utility/publicAttributeBag";

/** NotificationMessage View Model */
export type NotificationMessageBag = {
    /** Gets or sets the attributes. */
    attributes?: Record<string, PublicAttributeBag> | null;

    /** Gets or sets the attribute values. */
    attributeValues?: Record<string, string> | null;

    /**
     * Gets or sets the component data json. This data is only understood
     * by the component itself and should not be modified elsewhere.
     */
    componentDataJson?: string | null;

    /**
     * Gets or sets the count of the message. This value will be summed
     * for all visible messages and used as the total number of messages.
     * It will also usually be displayed as a badge on the message itself.
     */
    count: number;

    /** Gets or sets the created by person alias identifier. */
    createdByPersonAliasId?: number | null;

    /** Gets or sets the created date time. */
    createdDateTime?: string | null;

    /**
     * Gets or sets the description of the message. This should be a
     * somewhat short string, such as a couple of sentences.
     */
    description?: string | null;

    /**
     * Gets or sets the date and time the message will automatically expire
     * and be removed.
     */
    expireDateTime?: string | null;

    /** Gets or sets the identifier key of this entity. */
    idKey?: string | null;

    /** Gets or sets a value indicating whether this message has been read. */
    isRead: boolean;

    /**
     * Gets or sets the key that identifies this instance to the component.
     * The key allows components to look up existing messages so they can
     * be updated. null values are allowed.
     */
    key?: string | null;

    /**
     * Gets or sets the date and time at which point the message will be
     * shown to the individual. By default the current date and time will
     * be used, but setting to a future date is allowed.
     */
    messageDateTime?: string | null;

    /** Gets or sets the modified by person alias identifier. */
    modifiedByPersonAliasId?: number | null;

    /** Gets or sets the modified date time. */
    modifiedDateTime?: string | null;

    /**
     * Gets or sets the identifier of the Rock.Model.NotificationMessageType
     * that handles logic for this instance.
     */
    notificationMessageTypeId: number;

    /**
     * Gets or sets the person alias identifier of the individual this
     * message should be displayed to.
     */
    personAliasId: number;

    /**
     * Gets or sets the title of the message. This should be a very short
     * string, such as only a few words.
     */
    title?: string | null;
};
