//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

/** The resource list source type options available in the Group Scheduler block. */
export const ResourceListSourceType = {
    /** The members of the selected group. */
    Group: 0,

    /** The members of another group. */
    AlternateGroup: 1,

    /** The members of the parent group of the selected group. */
    ParentGroup: 2,

    /** The people that exist in a selected data view. */
    DataView: 3
} as const;

/** The resource list source type options available in the Group Scheduler block. */
export const ResourceListSourceTypeDescription: Record<number, string> = {
    0: "Group",

    1: "Alternate Group",

    2: "Parent Group",

    3: "Data View"
};

/** The resource list source type options available in the Group Scheduler block. */
export type ResourceListSourceType = typeof ResourceListSourceType[keyof typeof ResourceListSourceType];
